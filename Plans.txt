Plans.txt
=========

Since I do not know whether a similar open source package already exists, I am not making grandiose plans. (I
am pretty sure that there are commercial packages.) I believe that what I want to build is a "data warehouse." However,
the structure is very specific.

I am working on a book on recessions, and this limits my pure development time. However, I need to add international
data sources, and I will do placeholder work in this package as part of that.

The idea is that all data - including data generated internally - gets funnelled into a single database. Users only need
to learn a single query interface to get all data. Although there are commercial data providers that marshal data,
it is typically difficult to get your own data onto their system (and one may not wish to push proprietary data to an
outside party).

Since I will only be looking at a handful of series now, the library code will short-circuit database queries to just
use text files (one file per series). This will allow me to rapidly query the data in Python, and read the data into my
R plotting routines. I will eventually migrate those files to a SQL database.

Initial Objectives:

1) Build logging and configuration file support (done).
2) Build a minimal DB.nomics interface (done).
3) Refactor my R code to read the downloaded text files from the "text file database" and plot the data. (TODO)

Later Plans

I may work on these tasks before I launch a full attack on the platform.

- Rebuild fetch so that it supports the notion of different providers and databases, each implemented with subclass
objects.
- Use my Quick2DPlot code (from *sfc_models*) to create a configurable (using the config file) plot function.
- Minimal MySQL support. (No meta-data...)
- Table queries.
- Add a monkey-patch for *sfc_models* so that *sfc_models* users can use the myplatform plotting/fetching code.
- Create a Python COM server, so that other languages can use that rather than build a database interface (on Windows...)


